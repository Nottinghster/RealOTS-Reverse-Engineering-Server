#pragma once

enum FieldType_t : uint8_t
{
	FIELD_NONE = 0,
	FIELD_FIRE = 1,
	FIELD_POISON = 2,
	FIELD_ENERGY = 3,
	FIELD_MAGIC_WALL = 4,
	FIELD_WILD_GROWTH = 5,
};

enum PartyShields_t : uint8_t {
	SHIELD_NONE = 0,
	SHIELD_WHITEYELLOW = 1,
	SHIELD_WHITEBLUE = 2,
	SHIELD_BLUE = 3,
	SHIELD_YELLOW = 4
};

enum Skull_t : uint8_t {
	SKULL_NONE = 0,
	SKULL_YELLOW = 1,
	SKULL_GREEN = 2,
	SKULL_WHITE = 3,
	SKULL_RED = 4,
};

enum PlayerState_t : uint16_t
{
	PLAYER_STATE_POISONING = 1 << 0,
	PLAYER_STATE_BURNING = 1 << 1,
	PLAYER_STATE_ELECTRIFIED = 1 << 2,
	PLAYER_STATE_DRUNKEN = 1 << 3,
	PLAYER_STATE_MAGIC_SHIELD = 1 << 4,
	PLAYER_STATE_PARALYZED = 1 << 5,
	PLAYER_STATE_HASTED = 1 << 6,
	PLAYER_STATE_INFIGHT = 1 << 7,
};

enum SkillType_t : uint8_t
{
	SKILL_LEVEL = 0,
	SKILL_FIRST,
	SKILL_SWORDFIGHTING = SKILL_FIRST,
	SKILL_CLUBFIGHTING,
	SKILL_AXEFIGHTING,
	SKILL_FISTFIGHTING,
	SKILL_DISTANCEFIGHTING,
	SKILL_SHIELDING,
	SKILL_FISHING,
	SKILL_MAGIC,
	SKILL_LAST,
	SKILL_SIZE,
};

enum InventorySlot_t : uint8_t
{
	INVENTORY_HEAD = 1,
	INVENTORY_AMULET = 2,
	INVENTORY_CONTAINER = 3,
	INVENTORY_BODY = 4,
	INVENTORY_RIGHT = 5,
	INVENTORY_LEFT = 6,
	INVENTORY_LEGS = 7,
	INVENTORY_FEET = 8,
	INVENTORY_RING = 9,
	INVENTORY_EXTRA = 10,
	INVENTORY_SIZE,
};

enum TradeState_t : uint8_t {
	TRADE_NONE,
	TRADE_INITIATED,
	TRADE_ACCEPT,
	TRADE_ACKNOWLEDGE,
	TRADE_TRANSFER,
};

enum SexType_t : uint8_t
{
	SEX_FEMALE = 0,
	SEX_MALE = 1,
};

enum RaceType_t : uint8_t
{
	RACE_BLOOD = 0,
	RACE_UNDEAD = 1,
	RACE_POISON = 2,
};

enum CreatureType_t : uint8_t
{
	CREATURE_NONE = 0,
	CREATURE_MONSTER,
	CREATURE_PLAYER,
	CREATURE_NPC,
};

enum DamageType_t : uint32_t
{
	DAMAGE_PHYSICAL = 1,
	DAMAGE_POISON = 2,
	DAMAGE_FIRE = 4,
	DAMAGE_ENERGY = 8,
	// 16 unused?
	DAMAGE_POISONING = 32,
	DAMAGE_BURNING = 64,
	DAMAGE_ELECTRIFY = 128,
	DAMAGE_LIFEDRAIN = 256,
	DAMAGE_MANADRAIN = 512,
};

enum SpecialMeaning_t : uint8_t
{
	SPECIAL_MONEY_ONE = 1,
	SPECIAL_MONEY_HUNDRED = 2,
	SPECIAL_MONEY_TENTHOUSAND = 3,
	SPECIAL_INVENTORY_RIGHTHAND = 10,
	SPECIAL_INVENTORY_LEFTHAND = 11,
	SPECIAL_INVENTORY_BODY_MALE = 12,
	SPECIAL_INVENTORY_BODY_FEMALE = 13,
	SPECIAL_INVENTORY_CONTAINER = 14,
	SPECIAL_INVENTORY_FOOD = 15,
	SPECIAL_DEPOT_LOCKER = 20,
	SPECIAL_DEPOT_CHEST = 21,
	SPECIAL_PARCEL_NEW = 22,
	SPECIAL_PARCEL_STAMPED = 23,
	SPECIAL_PARCEL_LABEL = 24,
	SPECIAL_LETTER_NEW = 25,
	SPECIAL_LETTER_STAMPED = 26,
	SPECIAL_BLOOD_SPLASH = 30,
	SPECIAL_BLOOD_POOL = 31,
	SPECIAL_RUNE_BLANK = 40,
	SPECIAL_MAGICFIELD_FIRE_DANGEROUS = 41,
	SPECIAL_MAGICFIELD_FIRE_HARMLESS = 42,
	SPECIAL_MAGICFIELD_POISON_DANGEROUS = 43,
	SPECIAL_MAGICFIELD_POISON_HARMLESS = 44,
	SPECIAL_MAGICFIELD_ENERGY_DANGEROUS = 45,
	SPECIAL_MAGICFIELD_ENERGY_HARMLESS = 46,
	SPECIAL_MAGICFIELD_MAGICWALL = 47,
	SPECIAL_MAGICFIELD_RUSHWOOD = 48,
};

enum ChaseMode_t : uint8_t
{
	CHASE_STAND = 0,
	CHASE_FOLLOW = 1,
};

enum FightMode_t : uint8_t
{
	FIGHT_ATTACK = 1,
	FIGHT_BALANCED,
	FIGHT_DEFENSIVE,
};

enum Direction_t : uint8_t
{
	DIRECTION_NORTH = 0,
	DIRECTION_EAST = 1,
	DIRECTION_SOUTH = 2,
	DIRECTION_WEST = 3,
	DIRECTION_SOUTHWEST = 4,
	DIRECTION_SOUTHEAST = 5,
	DIRECTION_NORTHWEST = 6,
	DIRECTION_NORTHEAST = 7,
};

enum MessageType_t : uint8_t
{
	MESSAGE_CONSOLE_YELLOW = 0x01,
	MESSAGE_CONSOLE_LIGHT_BLUE = 0x04,
	MESSAGE_CONSOLE_ORANGE = 0x11,
	MESSAGE_WARNING = 0x12,
	MESSAGE_EVENT_ADVANCE = 0x13,
	MESSAGE_EVENT_DEFAULT = 0x14,
	MESSAGE_STATUS_DEFAULT = 0x15,
	MESSAGE_OBJECT_INFO = 0x16,
	MESSAGE_STATUS_SMALL = 0x17,
	MESSAGE_STATUS_CONSOLE_BLUE = 0x18,
	MESSAGE_STATUS_CONSOLE_RED = 0X19,
};

enum TalkType_t : uint8_t {
	TALKTYPE_SAY = 1,
	TALKTYPE_WHISPER = 2,
	TALKTYPE_YELL = 3,
	TALKTYPE_PRIVATE = 4,
	TALKTYPE_CHANNEL_Y = 5, // Yellow
	TALKTYPE_RVR_CHANNEL = 6,
	TALKTYPE_RVR_ANSWER = 7,
	TALKTYPE_RVR_CONTINUE = 8,
	TALKTYPE_BROADCAST = 9,
	TALKTYPE_CHANNEL_R1 = 10, // Red - #c text
	TALKTYPE_PRIVATE_RED = 11, // @name@text
	TALKTYPE_CHANNEL_O = 12, // orange
	TALKTYPE_CHANNEL_R2 = 13, // red anonymous - #d text
	TALKTYPE_MONSTER_YELL = 0x10,
	TALKTYPE_MONSTER_SAY = 0x11,
};

enum ItemFlags_t : uint8_t
{
	BANK,
	CLIP,
	BOTTOM,
	TOP,
	CONTAINER,
	CHEST,
	CUMULATIVE,
	USEEVENT,
	CHANGEUSE,
	FORCEUSE,
	MULTIUSE,
	DISTUSE,
	MOVEMENTEVENT,
	COLLISIONEVENT,
	SEPARATIONEVENT,
	KEY,
	KEYDOOR,
	NAMEDOOR,
	LEVELDOOR,
	QUESTDOOR,
	BED,
	FOOD,
	RUNE,
	INFORMATION,
	TEXT,
	WRITE,
	WRITEONCE,
	LIQUIDCONTAINER,
	LIQUIDSOURCE,
	LIQUIDPOOL,
	TELEPORTABSOLUTE,
	TELEPORTRELATIVE,
	UNPASS,
	UNMOVE,
	UNTHROW,
	UNLAY,
	AVOID,
	MAGICFIELD,
	RESTRICTLEVEL,
	RESTRICTPROFESSION,
	TAKE,
	HANG,
	HOOKSOUTH,
	HOOKEAST,
	ROTATE,
	DESTROY,
	CLOTHES,
	SKILLBOOST,
	PROTECTION,
	LIGHT,
	ROPESPOT,
	CORPSE,
	EXPIRE,
	EXPIRESTOP,
	WEAROUT,
	WEAPON,
	SHIELD,
	BOW,
	THROWABLE,
	WAND,
	AMMO,
	ARMOR,
	HEIGHT,
	DISGUISE,
	SHOWDETAIL,
	SPECIAL,
	ITEM_FLAGS_SIZE,
};

enum ItemAttribute_t : uint8_t
{
	WAYPOINTS,
	CAPACITY,
	CHANGETARGET,
	KEYDOORTARGET,
	NAMEDOORTARGET,
	LEVELDOORTARGET,
	QUESTDOORTARGET,
	NUTRITION,
	INFORMATIONTYPE,
	FONTSIZE,
	MAXLENGTH,
	MAXLENGTHONCE,
	SOURCELIQUIDTYPE,
	ABSTELEPORTEFFECT,
	RELTELEPORTDISPLACEMENT,
	RELTELEPORTEFFECT,
	AVOIDDAMAGETYPES,
	MINIMUMLEVEL,
	PROFESSIONS,
	WEIGHT,
	ROTATETARGET,
	DESTROYTARGET,
	BODYPOSITION,
	SKILLNUMBER,
	SKILLMODIFICATION,
	PROTECTIONDAMAGETYPES,
	DAMAGEREDUCTION,
	BRIGHTNESS,
	LIGHTCOLOR,
	CORPSETYPE,
	TOTALEXPIRETIME,
	EXPIRETARGET,
	TOTALUSES,
	WEAROUTTARGET,
	WEAPONTYPE,
	WEAPONATTACKVALUE,
	WEAPONDEFENDVALUE,
	SHIELDDEFENDVALUE,
	BOWRANGE,
	BOWAMMOTYPE,
	THROWRANGE,
	THROWATTACKVALUE,
	THROWDEFENDVALUE,
	THROWMISSILE,
	THROWSPECIALEFFECT,
	THROWEFFECTSTRENGTH,
	THROWFRAGILITY,
	WANDRANGE,
	WANDMANACONSUMPTION,
	WANDATTACKSTRENGTH,
	WANDATTACKVARIATION,
	WANDDAMAGETYPE,
	WANDMISSILE,
	AMMOTYPE,
	AMMOATTACKVALUE,
	AMMOMISSILE,
	AMMOSPECIALEFFECT,
	AMMOEFFECTSTRENGTH,
	ARMORVALUE,
	ELEVATION,
	DISGUISETARGET,
	MEANING,
	ITEM_ATTRIBUTES_SIZE,
};

enum ItemInstance_t : uint8_t
{
	ITEM_REMAINING_EXPIRE_TIME = 0,
	ITEM_SAVED_EXPIRE_TIME,
	ITEM_RESPONSIBLE,
	ITEM_AMOUNT,
	ITEM_CHARGES,
	ITEM_REMAINING_USES,
	ITEM_KEY_NUMBER,
	ITEM_LIQUID_TYPE,
	ITEM_INSTANCE_SIZE,
};

enum ReturnValue_t : uint8_t
{
	ALLGOOD,
	NOTPOSSIBLE,
	NOTENOUGHROOM,
	PLAYERISPZLOCKED,
	PLAYERISNOTINVITED,
	CANNOTTHROW,
	THEREISNOWAY,
	DESTINATIONOUTOFREACH,
	CREATUREBLOCK,
	NOTMOVEABLE,
	DROPTWOHANDEDITEM,
	BOTHHANDSNEEDTOBEFREE,
	CANONLYUSEONEWEAPON,
	NEEDEXCHANGE,
	CANNOTBEDRESSED,
	PUTTHISOBJECTINYOURHAND,
	PUTTHISOBJECTINBOTHHANDS,
	TOOFARAWAY,
	FIRSTGODOWNSTAIRS,
	FIRSTGOUPSTAIRS,
	CONTAINERNOTENOUGHROOM,
	NOTENOUGHCAPACITY,
	CANNOTPICKUP,
	THISISIMPOSSIBLE,
	DEPOTISFULL,
	CREATUREDOESNOTEXIST,
	CANNOTUSETHISOBJECT,
	PLAYERWITHTHISNAMEISNOTONLINE,
	APLAYERWITHTHISNAMEDOESNOTEXIST,
	NOTREQUIREDLEVELTOUSERUNE,
	YOUAREALREADYTRADING,
	THISPLAYERISALREADYTRADING,
	YOUMAYNOTLOGOUTDURINGAFIGHT,
	DIRECTPLAYERSHOOT,
	NOTENOUGHLEVEL,
	NOTENOUGHMAGICLEVEL,
	NOTENOUGHMANA,
	NOTENOUGHSOUL,
	YOUAREEXHAUSTED,
	PLAYERISNOTREACHABLE,
	CANONLYUSETHISRUNEONCREATURES,
	ACTIONNOTPERMITTEDINPROTECTIONZONE,
	YOUMAYNOTATTACKTHISPLAYER,
	YOUMAYNOTATTACKAPERSONINPROTECTIONZONE,
	YOUMAYNOTATTACKAPERSONWHILEINPROTECTIONZONE,
	YOUMAYNOTATTACKTHISCREATURE,
	YOUCANONLYUSEITONCREATURES,
	CREATUREISNOTREACHABLE,
	TURNSECUREMODETOATTACKUNMARKEDPLAYERS,
	YOUNEEDPREMIUMACCOUNT,
	YOUNEEDTOLEARNTHISSPELL,
	YOURVOCATIONCANNOTUSETHISSPELL,
	YOUNEEDAWEAPONTOUSETHISSPELL,
	PLAYERISPZLOCKEDLEAVEPVPZONE,
	PLAYERISPZLOCKEDENTERPVPZONE,
	ACTIONNOTPERMITTEDINANOPVPZONE,
	YOUCANNOTLOGOUTHERE,
	YOUNEEDAMAGICITEMTOCASTSPELL,
	CANNOTCONJUREITEMHERE,
	YOUNEEDTOSPLITYOURSPEARS,
	NAMEISTOOAMBIGIOUS,
	CANONLYUSEONESHIELD,
	TARGETLOST,
};
